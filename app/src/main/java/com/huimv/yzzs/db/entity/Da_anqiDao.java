package com.huimv.yzzs.db.entity;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import com.huimv.yzzs.db.entity.Da_anqi;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table DA_ANQI.
*/
public class Da_anqiDao extends AbstractDao<Da_anqi, Long> {

    public static final String TABLENAME = "DA_ANQI";

    /**
     * Properties of entity Da_anqi.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Hkaqsx = new Property(1, String.class, "hkaqsx", false, "HKAQSX");
        public final static Property Hkaq = new Property(2, String.class, "hkaq", false, "HKAQ");
        public final static Property Hksj = new Property(3, String.class, "hksj", false, "HKSJ");
        public final static Property Hkazwz = new Property(4, String.class, "hkazwz", false, "HKAZWZ");
    }


    public Da_anqiDao(DaoConfig config) {
        super(config);
    }
    
    public Da_anqiDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'DA_ANQI' (" + //
                "'_id' INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: id
                "'HKAQSX' TEXT," + // 1: hkaqsx
                "'HKAQ' TEXT," + // 2: hkaq
                "'HKSJ' TEXT," + // 3: hksj
                "'HKAZWZ' TEXT);"); // 4: hkazwz
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'DA_ANQI'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, Da_anqi entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String hkaqsx = entity.getHkaqsx();
        if (hkaqsx != null) {
            stmt.bindString(2, hkaqsx);
        }
 
        String hkaq = entity.getHkaq();
        if (hkaq != null) {
            stmt.bindString(3, hkaq);
        }
 
        String hksj = entity.getHksj();
        if (hksj != null) {
            stmt.bindString(4, hksj);
        }
 
        String hkazwz = entity.getHkazwz();
        if (hkazwz != null) {
            stmt.bindString(5, hkazwz);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public Da_anqi readEntity(Cursor cursor, int offset) {
        Da_anqi entity = new Da_anqi( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // hkaqsx
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // hkaq
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // hksj
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4) // hkazwz
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, Da_anqi entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setHkaqsx(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setHkaq(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setHksj(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setHkazwz(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(Da_anqi entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(Da_anqi entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
